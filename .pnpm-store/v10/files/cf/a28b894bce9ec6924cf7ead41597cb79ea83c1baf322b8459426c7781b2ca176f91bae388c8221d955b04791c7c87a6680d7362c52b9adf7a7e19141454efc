import { default as React } from 'react';
import { TabPanelProps } from '../TabPanel/TabPanel.component';
import { TabProps } from '../Tab/Tab.component';
declare const _default: {
    title: string;
    component: React.FC<import('./MainTabs.component').MainTabsProps>;
    argTypes: {
        children: {
            control: boolean;
            table: {
                type: {
                    summary: string;
                };
            };
        };
        tabs: {
            table: {
                disable: boolean;
            };
        };
        tabpanels: {
            table: {
                disable: boolean;
            };
        };
    };
};
export default _default;
interface TemplateProps {
    tabs: React.ReactElement<TabProps>[];
    tabpanels: React.ReactElement<TabPanelProps>[];
}
type OnSelectHandler = (value: number) => void;
interface ControlledTemplateProps {
    tabs?: React.ReactElement<TabProps>[];
    tabpanels?: React.ReactElement<TabPanelProps>[];
    selectedIndex?: number;
    onSelect?: OnSelectHandler;
}
export declare const Default: {
    render: ({ tabs, tabpanels, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        tabs: React.JSX.Element[];
        tabpanels: React.JSX.Element[];
    };
};
export declare const Controlled: {
    render: ({ onSelect, selectedIndex, tabs, tabpanels, ...args }: ControlledTemplateProps) => React.JSX.Element;
    args: {
        tabs: React.JSX.Element[];
        tabpanels: React.JSX.Element[];
        selectedIndex: number;
    };
};
//# sourceMappingURL=MainTabs.stories.d.ts.map