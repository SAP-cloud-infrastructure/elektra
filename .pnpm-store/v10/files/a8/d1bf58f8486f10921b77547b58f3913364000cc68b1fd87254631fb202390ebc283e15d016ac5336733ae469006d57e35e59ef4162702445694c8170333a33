import * as _testing_library_dom from '@testing-library/dom';
import { ByRoleOptions, MatcherOptions, SelectorMatcherOptions, ByRoleMatcher, Matcher, waitForOptions, AllByRole, AllByText, AllByBoundAttribute, screen, logDOM, prettyDOM, queries } from '@testing-library/dom';
import { NewPlugin } from 'pretty-format';

declare type Container = HTMLElement | Document | ShadowRoot;
interface ShadowOptions {
    shallow?: boolean;
}
interface ShadowByRoleOptions extends ByRoleOptions, ShadowOptions {
}
interface ShadowMatcherOptions extends MatcherOptions, ShadowOptions {
}
interface ShadowSelectorMatcherOptions extends SelectorMatcherOptions, ShadowOptions {
}
declare type ShadowRoleMatcherParams = [
    container: HTMLElement,
    ...args: ScreenShadowRoleMatcherParams
];
declare type ShadowSelectorMatcherParams = [
    container: HTMLElement,
    ...args: ScreenShadowSelectorMatcherParams
];
declare type ShadowMatcherParams = [
    container: HTMLElement,
    ...args: ScreenShadowMatcherParams
];
declare type ScreenShadowRoleMatcherParams = [
    role: ByRoleMatcher,
    options?: ShadowByRoleOptions | undefined
];
declare type ScreenShadowSelectorMatcherParams = [
    id: Matcher,
    options?: ShadowSelectorMatcherOptions | undefined
];
declare type ScreenShadowMatcherParams = [
    id: Matcher,
    options?: ShadowMatcherOptions | undefined
];
declare type AsyncShadowRoleMatcherParams = [
    container: HTMLElement,
    ...args: AsyncScreenShadowRoleMatcherParams
];
declare type AsyncShadowSelectorMatcherParams = [
    container: HTMLElement,
    ...args: AsyncScreenShadowSelectorMatcherParams
];
declare type AsyncShadowMatcherParams = [
    container: HTMLElement,
    ...args: AsyncScreenShadowMatcherParams
];
declare type AsyncScreenShadowRoleMatcherParams = [
    role: ByRoleMatcher,
    options?: ShadowByRoleOptions | undefined,
    waitForOptions?: waitForOptions | undefined
];
declare type AsyncScreenShadowSelectorMatcherParams = [
    id: Matcher,
    options?: ShadowSelectorMatcherOptions | undefined,
    waitForOptions?: waitForOptions | undefined
];
declare type AsyncScreenShadowMatcherParams = [
    id: Matcher,
    options?: ShadowMatcherOptions | undefined,
    waitForOptions?: waitForOptions | undefined
];

declare function queryAllByShadowRole<T extends HTMLElement = HTMLElement>(...args: ShadowRoleMatcherParams): ReturnType<AllByRole<T>>;
declare const queryByShadowRole: <T extends HTMLElement>(container: HTMLElement, role: ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T | null;
declare const getAllByShadowRole: <T extends HTMLElement>(container: HTMLElement, role: ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T[];
declare const getByShadowRole: <T extends HTMLElement>(container: HTMLElement, role: ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T;
declare const findAllByShadowRole: <T extends HTMLElement>(args_0: HTMLElement, args_1: ByRoleMatcher, args_2?: ShadowByRoleOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowRole: <T extends HTMLElement>(args_0: HTMLElement, args_1: ByRoleMatcher, args_2?: ShadowByRoleOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowLabelText<T extends HTMLElement = HTMLElement>(...args: ShadowSelectorMatcherParams): ReturnType<AllByText<T>>;
declare const queryByShadowLabelText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T | null;
declare const getAllByShadowLabelText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T[];
declare const getByShadowLabelText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T;
declare const findAllByShadowLabelText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowLabelText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowPlaceholderText<T extends HTMLElement = HTMLElement>(...args: ShadowMatcherParams): ReturnType<AllByText<T>>;
declare const queryByShadowPlaceholderText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T | null;
declare const getAllByShadowPlaceholderText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T[];
declare const getByShadowPlaceholderText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T;
declare const findAllByShadowPlaceholderText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowPlaceholderText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowText<T extends HTMLElement = HTMLElement>(...args: ShadowSelectorMatcherParams): ReturnType<AllByText<T>>;
declare const queryByShadowText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T | null;
declare const getAllByShadowText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T[];
declare const getByShadowText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T;
declare const findAllByShadowText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowDisplayValue<T extends HTMLElement = HTMLElement>(...args: ShadowSelectorMatcherParams): ReturnType<AllByBoundAttribute<T>>;
declare const queryByShadowDisplayValue: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T | null;
declare const getAllByShadowDisplayValue: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T[];
declare const getByShadowDisplayValue: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T;
declare const findAllByShadowDisplayValue: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowDisplayValue: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowSelectorMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowAltText<T extends HTMLElement = HTMLElement>(...args: ShadowMatcherParams): ReturnType<AllByText<T>>;
declare const queryByShadowAltText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T | null;
declare const getAllByShadowAltText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T[];
declare const getByShadowAltText: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T;
declare const findAllByShadowAltText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowAltText: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowTitle<T extends HTMLElement = HTMLElement>(...args: ShadowMatcherParams): ReturnType<AllByBoundAttribute<T>>;
declare const queryByShadowTitle: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T | null;
declare const getAllByShadowTitle: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T[];
declare const getByShadowTitle: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T;
declare const findAllByShadowTitle: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowTitle: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;
declare function queryAllByShadowTestId<T extends HTMLElement = HTMLElement>(...args: ShadowMatcherParams): ReturnType<AllByBoundAttribute<T>>;
declare const queryByShadowTestId: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T | null;
declare const getAllByShadowTestId: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T[];
declare const getByShadowTestId: <T extends HTMLElement>(container: HTMLElement, id: Matcher, options?: ShadowMatcherOptions | undefined) => T;
declare const findAllByShadowTestId: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T[]>;
declare const findByShadowTestId: <T extends HTMLElement>(args_0: HTMLElement, args_1: Matcher, args_2?: ShadowMatcherOptions | undefined, args_3?: _testing_library_dom.waitForOptions | undefined) => Promise<T>;

declare const shadowQueries_queryAllByShadowRole: typeof queryAllByShadowRole;
declare const shadowQueries_queryByShadowRole: typeof queryByShadowRole;
declare const shadowQueries_getAllByShadowRole: typeof getAllByShadowRole;
declare const shadowQueries_getByShadowRole: typeof getByShadowRole;
declare const shadowQueries_findAllByShadowRole: typeof findAllByShadowRole;
declare const shadowQueries_findByShadowRole: typeof findByShadowRole;
declare const shadowQueries_queryAllByShadowLabelText: typeof queryAllByShadowLabelText;
declare const shadowQueries_queryByShadowLabelText: typeof queryByShadowLabelText;
declare const shadowQueries_getAllByShadowLabelText: typeof getAllByShadowLabelText;
declare const shadowQueries_getByShadowLabelText: typeof getByShadowLabelText;
declare const shadowQueries_findAllByShadowLabelText: typeof findAllByShadowLabelText;
declare const shadowQueries_findByShadowLabelText: typeof findByShadowLabelText;
declare const shadowQueries_queryAllByShadowPlaceholderText: typeof queryAllByShadowPlaceholderText;
declare const shadowQueries_queryByShadowPlaceholderText: typeof queryByShadowPlaceholderText;
declare const shadowQueries_getAllByShadowPlaceholderText: typeof getAllByShadowPlaceholderText;
declare const shadowQueries_getByShadowPlaceholderText: typeof getByShadowPlaceholderText;
declare const shadowQueries_findAllByShadowPlaceholderText: typeof findAllByShadowPlaceholderText;
declare const shadowQueries_findByShadowPlaceholderText: typeof findByShadowPlaceholderText;
declare const shadowQueries_queryAllByShadowText: typeof queryAllByShadowText;
declare const shadowQueries_queryByShadowText: typeof queryByShadowText;
declare const shadowQueries_getAllByShadowText: typeof getAllByShadowText;
declare const shadowQueries_getByShadowText: typeof getByShadowText;
declare const shadowQueries_findAllByShadowText: typeof findAllByShadowText;
declare const shadowQueries_findByShadowText: typeof findByShadowText;
declare const shadowQueries_queryAllByShadowDisplayValue: typeof queryAllByShadowDisplayValue;
declare const shadowQueries_queryByShadowDisplayValue: typeof queryByShadowDisplayValue;
declare const shadowQueries_getAllByShadowDisplayValue: typeof getAllByShadowDisplayValue;
declare const shadowQueries_getByShadowDisplayValue: typeof getByShadowDisplayValue;
declare const shadowQueries_findAllByShadowDisplayValue: typeof findAllByShadowDisplayValue;
declare const shadowQueries_findByShadowDisplayValue: typeof findByShadowDisplayValue;
declare const shadowQueries_queryAllByShadowAltText: typeof queryAllByShadowAltText;
declare const shadowQueries_queryByShadowAltText: typeof queryByShadowAltText;
declare const shadowQueries_getAllByShadowAltText: typeof getAllByShadowAltText;
declare const shadowQueries_getByShadowAltText: typeof getByShadowAltText;
declare const shadowQueries_findAllByShadowAltText: typeof findAllByShadowAltText;
declare const shadowQueries_findByShadowAltText: typeof findByShadowAltText;
declare const shadowQueries_queryAllByShadowTitle: typeof queryAllByShadowTitle;
declare const shadowQueries_queryByShadowTitle: typeof queryByShadowTitle;
declare const shadowQueries_getAllByShadowTitle: typeof getAllByShadowTitle;
declare const shadowQueries_getByShadowTitle: typeof getByShadowTitle;
declare const shadowQueries_findAllByShadowTitle: typeof findAllByShadowTitle;
declare const shadowQueries_findByShadowTitle: typeof findByShadowTitle;
declare const shadowQueries_queryAllByShadowTestId: typeof queryAllByShadowTestId;
declare const shadowQueries_queryByShadowTestId: typeof queryByShadowTestId;
declare const shadowQueries_getAllByShadowTestId: typeof getAllByShadowTestId;
declare const shadowQueries_getByShadowTestId: typeof getByShadowTestId;
declare const shadowQueries_findAllByShadowTestId: typeof findAllByShadowTestId;
declare const shadowQueries_findByShadowTestId: typeof findByShadowTestId;
declare namespace shadowQueries {
  export {
    shadowQueries_queryAllByShadowRole as queryAllByShadowRole,
    shadowQueries_queryByShadowRole as queryByShadowRole,
    shadowQueries_getAllByShadowRole as getAllByShadowRole,
    shadowQueries_getByShadowRole as getByShadowRole,
    shadowQueries_findAllByShadowRole as findAllByShadowRole,
    shadowQueries_findByShadowRole as findByShadowRole,
    shadowQueries_queryAllByShadowLabelText as queryAllByShadowLabelText,
    shadowQueries_queryByShadowLabelText as queryByShadowLabelText,
    shadowQueries_getAllByShadowLabelText as getAllByShadowLabelText,
    shadowQueries_getByShadowLabelText as getByShadowLabelText,
    shadowQueries_findAllByShadowLabelText as findAllByShadowLabelText,
    shadowQueries_findByShadowLabelText as findByShadowLabelText,
    shadowQueries_queryAllByShadowPlaceholderText as queryAllByShadowPlaceholderText,
    shadowQueries_queryByShadowPlaceholderText as queryByShadowPlaceholderText,
    shadowQueries_getAllByShadowPlaceholderText as getAllByShadowPlaceholderText,
    shadowQueries_getByShadowPlaceholderText as getByShadowPlaceholderText,
    shadowQueries_findAllByShadowPlaceholderText as findAllByShadowPlaceholderText,
    shadowQueries_findByShadowPlaceholderText as findByShadowPlaceholderText,
    shadowQueries_queryAllByShadowText as queryAllByShadowText,
    shadowQueries_queryByShadowText as queryByShadowText,
    shadowQueries_getAllByShadowText as getAllByShadowText,
    shadowQueries_getByShadowText as getByShadowText,
    shadowQueries_findAllByShadowText as findAllByShadowText,
    shadowQueries_findByShadowText as findByShadowText,
    shadowQueries_queryAllByShadowDisplayValue as queryAllByShadowDisplayValue,
    shadowQueries_queryByShadowDisplayValue as queryByShadowDisplayValue,
    shadowQueries_getAllByShadowDisplayValue as getAllByShadowDisplayValue,
    shadowQueries_getByShadowDisplayValue as getByShadowDisplayValue,
    shadowQueries_findAllByShadowDisplayValue as findAllByShadowDisplayValue,
    shadowQueries_findByShadowDisplayValue as findByShadowDisplayValue,
    shadowQueries_queryAllByShadowAltText as queryAllByShadowAltText,
    shadowQueries_queryByShadowAltText as queryByShadowAltText,
    shadowQueries_getAllByShadowAltText as getAllByShadowAltText,
    shadowQueries_getByShadowAltText as getByShadowAltText,
    shadowQueries_findAllByShadowAltText as findAllByShadowAltText,
    shadowQueries_findByShadowAltText as findByShadowAltText,
    shadowQueries_queryAllByShadowTitle as queryAllByShadowTitle,
    shadowQueries_queryByShadowTitle as queryByShadowTitle,
    shadowQueries_getAllByShadowTitle as getAllByShadowTitle,
    shadowQueries_getByShadowTitle as getByShadowTitle,
    shadowQueries_findAllByShadowTitle as findAllByShadowTitle,
    shadowQueries_findByShadowTitle as findByShadowTitle,
    shadowQueries_queryAllByShadowTestId as queryAllByShadowTestId,
    shadowQueries_queryByShadowTestId as queryByShadowTestId,
    shadowQueries_getAllByShadowTestId as getAllByShadowTestId,
    shadowQueries_getByShadowTestId as getByShadowTestId,
    shadowQueries_findAllByShadowTestId as findAllByShadowTestId,
    shadowQueries_findByShadowTestId as findByShadowTestId,
  };
}

declare function debug(...args: Parameters<typeof screen.debug>): void;

declare function logShadowDOM(...args: Parameters<typeof logDOM>): ReturnType<typeof logDOM>;

declare function prettyShadowDOM(...args: Parameters<typeof prettyDOM>): ReturnType<typeof prettyDOM>;
declare function createDOMElementFilter(filterNode: (node: Node) => boolean): NewPlugin;

declare const shadowScreen: {
    debug: typeof debug;
    queryAllByShadowRole: <T extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T[];
    queryByShadowRole: <T_1 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T_1 | null;
    getAllByShadowRole: <T_2 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T_2[];
    getByShadowRole: <T_3 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T_3;
    findAllByShadowRole: <T_4 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_4[]>;
    findByShadowRole: <T_5 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_5>;
    queryAllByShadowLabelText: <T_6 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_6[];
    queryByShadowLabelText: <T_7 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_7 | null;
    getAllByShadowLabelText: <T_8 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_8[];
    getByShadowLabelText: <T_9 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_9;
    findAllByShadowLabelText: <T_10 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_10[]>;
    findByShadowLabelText: <T_11 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_11>;
    queryAllByShadowPlaceholderText: <T_12 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_12[];
    queryByShadowPlaceholderText: <T_13 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_13 | null;
    getAllByShadowPlaceholderText: <T_14 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_14[];
    getByShadowPlaceholderText: <T_15 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_15;
    findAllByShadowPlaceholderText: <T_16 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_16[]>;
    findByShadowPlaceholderText: <T_17 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_17>;
    queryAllByShadowText: <T_18 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_18[];
    queryByShadowText: <T_19 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_19 | null;
    getAllByShadowText: <T_20 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_20[];
    getByShadowText: <T_21 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_21;
    findAllByShadowText: <T_22 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_22[]>;
    findByShadowText: <T_23 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_23>;
    queryAllByShadowDisplayValue: <T_24 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_24[];
    queryByShadowDisplayValue: <T_25 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_25 | null;
    getAllByShadowDisplayValue: <T_26 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_26[];
    getByShadowDisplayValue: <T_27 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_27;
    findAllByShadowDisplayValue: <T_28 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_28[]>;
    findByShadowDisplayValue: <T_29 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_29>;
    queryAllByShadowAltText: <T_30 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_30[];
    queryByShadowAltText: <T_31 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_31 | null;
    getAllByShadowAltText: <T_32 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_32[];
    getByShadowAltText: <T_33 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_33;
    findAllByShadowAltText: <T_34 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_34[]>;
    findByShadowAltText: <T_35 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_35>;
    queryAllByShadowTitle: <T_36 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_36[];
    queryByShadowTitle: <T_37 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_37 | null;
    getAllByShadowTitle: <T_38 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_38[];
    getByShadowTitle: <T_39 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_39;
    findAllByShadowTitle: <T_40 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_40[]>;
    findByShadowTitle: <T_41 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_41>;
    queryAllByShadowTestId: <T_42 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_42[];
    queryByShadowTestId: <T_43 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_43 | null;
    getAllByShadowTestId: <T_44 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_44[];
    getByShadowTestId: <T_45 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_45;
    findAllByShadowTestId: <T_46 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_46[]>;
    findByShadowTestId: <T_47 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined, waitForOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_47>;
    getByLabelText: (<T_48 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_48) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement);
    getAllByLabelText: (<T_49 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_49[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    queryByLabelText: (<T_50 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_50 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement | null);
    queryAllByLabelText: (<T_51 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_51[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    findByLabelText: (<T_52 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_52>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByLabelText: (<T_53 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_53[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByPlaceholderText: (<T_54 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_54) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByPlaceholderText: (<T_55 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_55[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByPlaceholderText: (<T_56 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_56 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByPlaceholderText: (<T_57 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_57[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByPlaceholderText: (<T_58 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_58>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByPlaceholderText: (<T_59 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_59[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByText: (<T_60 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_60) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement);
    getAllByText: (<T_61 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_61[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    queryByText: (<T_62 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_62 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement | null);
    queryAllByText: (<T_63 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_63[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    findByText: (<T_64 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_64>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByText: (<T_65 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_65[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByAltText: (<T_66 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_66) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByAltText: (<T_67 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_67[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByAltText: (<T_68 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_68 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByAltText: (<T_69 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_69[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByAltText: (<T_70 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_70>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByAltText: (<T_71 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_71[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByTitle: (<T_72 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_72) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByTitle: (<T_73 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_73[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByTitle: (<T_74 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_74 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByTitle: (<T_75 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_75[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByTitle: (<T_76 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_76>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByTitle: (<T_77 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_77[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByDisplayValue: (<T_78 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_78) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByDisplayValue: (<T_79 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_79[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByDisplayValue: (<T_80 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_80 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByDisplayValue: (<T_81 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_81[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByDisplayValue: (<T_82 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_82>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByDisplayValue: (<T_83 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_83[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByRole: (<T_84 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => T_84) & ((role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => HTMLElement);
    getAllByRole: (<T_85 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => T_85[]) & ((role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => HTMLElement[]);
    queryByRole: (<T_86 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => T_86 | null) & ((role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => HTMLElement | null);
    queryAllByRole: (<T_87 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => T_87[]) & ((role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined) => HTMLElement[]);
    findByRole: (<T_88 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_88>) & ((role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByRole: (<T_89 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_89[]>) & ((role: _testing_library_dom.ByRoleMatcher, options?: _testing_library_dom.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByTestId: (<T_90 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_90) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByTestId: (<T_91 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_91[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByTestId: (<T_92 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_92 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByTestId: (<T_93 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_93[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByTestId: (<T_94 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_94>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByTestId: (<T_95 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_95[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    logTestingPlaygroundURL: (element?: Element | HTMLDocument | undefined) => string;
};

declare function shadowWithin(element: HTMLElement): {
    queryAllByShadowRole: <T extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T[];
    queryByShadowRole: <T_1 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T_1 | null;
    getAllByShadowRole: <T_2 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T_2[];
    getByShadowRole: <T_3 extends HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: ShadowByRoleOptions | undefined) => T_3;
    findAllByShadowRole: <T_4 extends HTMLElement>(args_0: _testing_library_dom.ByRoleMatcher, args_1?: ShadowByRoleOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_4[]>;
    findByShadowRole: <T_5 extends HTMLElement>(args_0: _testing_library_dom.ByRoleMatcher, args_1?: ShadowByRoleOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_5>;
    queryAllByShadowLabelText: <T_6 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_6[];
    queryByShadowLabelText: <T_7 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_7 | null;
    getAllByShadowLabelText: <T_8 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_8[];
    getByShadowLabelText: <T_9 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_9;
    findAllByShadowLabelText: <T_10 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_10[]>;
    findByShadowLabelText: <T_11 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_11>;
    queryAllByShadowPlaceholderText: <T_12 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_12[];
    queryByShadowPlaceholderText: <T_13 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_13 | null;
    getAllByShadowPlaceholderText: <T_14 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_14[];
    getByShadowPlaceholderText: <T_15 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_15;
    findAllByShadowPlaceholderText: <T_16 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_16[]>;
    findByShadowPlaceholderText: <T_17 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_17>;
    queryAllByShadowText: <T_18 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_18[];
    queryByShadowText: <T_19 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_19 | null;
    getAllByShadowText: <T_20 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_20[];
    getByShadowText: <T_21 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_21;
    findAllByShadowText: <T_22 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_22[]>;
    findByShadowText: <T_23 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_23>;
    queryAllByShadowDisplayValue: <T_24 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_24[];
    queryByShadowDisplayValue: <T_25 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_25 | null;
    getAllByShadowDisplayValue: <T_26 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_26[];
    getByShadowDisplayValue: <T_27 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowSelectorMatcherOptions | undefined) => T_27;
    findAllByShadowDisplayValue: <T_28 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_28[]>;
    findByShadowDisplayValue: <T_29 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowSelectorMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_29>;
    queryAllByShadowAltText: <T_30 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_30[];
    queryByShadowAltText: <T_31 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_31 | null;
    getAllByShadowAltText: <T_32 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_32[];
    getByShadowAltText: <T_33 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_33;
    findAllByShadowAltText: <T_34 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_34[]>;
    findByShadowAltText: <T_35 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_35>;
    queryAllByShadowTitle: <T_36 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_36[];
    queryByShadowTitle: <T_37 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_37 | null;
    getAllByShadowTitle: <T_38 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_38[];
    getByShadowTitle: <T_39 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_39;
    findAllByShadowTitle: <T_40 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_40[]>;
    findByShadowTitle: <T_41 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_41>;
    queryAllByShadowTestId: <T_42 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_42[];
    queryByShadowTestId: <T_43 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_43 | null;
    getAllByShadowTestId: <T_44 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_44[];
    getByShadowTestId: <T_45 extends HTMLElement>(id: _testing_library_dom.Matcher, options?: ShadowMatcherOptions | undefined) => T_45;
    findAllByShadowTestId: <T_46 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_46[]>;
    findByShadowTestId: <T_47 extends HTMLElement>(args_0: _testing_library_dom.Matcher, args_1?: ShadowMatcherOptions | undefined, args_2?: _testing_library_dom.waitForOptions | undefined) => Promise<T_47>;
    getByLabelText: (<T_48 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_48) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement);
    getAllByLabelText: (<T_49 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_49[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    queryByLabelText: (<T_50 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_50 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement | null);
    queryAllByLabelText: (<T_51 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_51[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    findByLabelText: (<T_52 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_52>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByLabelText: (<T_53 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_53[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByPlaceholderText: (<T_54 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_54) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByPlaceholderText: (<T_55 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_55[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByPlaceholderText: (<T_56 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_56 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByPlaceholderText: (<T_57 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_57[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByPlaceholderText: (<T_58 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_58>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByPlaceholderText: (<T_59 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_59[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByText: (<T_60 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_60) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement);
    getAllByText: (<T_61 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_61[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    queryByText: (<T_62 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_62 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement | null);
    queryAllByText: (<T_63 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => T_63[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined) => HTMLElement[]);
    findByText: (<T_64 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_64>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByText: (<T_65 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_65[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.SelectorMatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByAltText: (<T_66 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_66) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByAltText: (<T_67 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_67[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByAltText: (<T_68 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_68 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByAltText: (<T_69 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_69[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByAltText: (<T_70 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_70>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByAltText: (<T_71 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_71[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByTitle: (<T_72 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_72) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByTitle: (<T_73 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_73[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByTitle: (<T_74 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_74 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByTitle: (<T_75 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_75[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByTitle: (<T_76 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_76>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByTitle: (<T_77 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_77[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByDisplayValue: (<T_78 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_78) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByDisplayValue: (<T_79 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_79[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByDisplayValue: (<T_80 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_80 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByDisplayValue: (<T_81 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_81[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByDisplayValue: (<T_82 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_82>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByDisplayValue: (<T_83 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_83[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByRole: (<T_84 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => T_84) & ((role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement);
    getAllByRole: (<T_85 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => T_85[]) & ((role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement[]);
    queryByRole: (<T_86 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => T_86 | null) & ((role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement | null);
    queryAllByRole: (<T_87 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => T_87[]) & ((role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement[]);
    findByRole: (<T_88 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_88>) & ((role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByRole: (<T_89 extends HTMLElement = HTMLElement>(role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_89[]>) & ((role: _testing_library_dom.ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
    getByTestId: (<T_90 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_90) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement);
    getAllByTestId: (<T_91 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_91[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    queryByTestId: (<T_92 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_92 | null) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement | null);
    queryAllByTestId: (<T_93 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => T_93[]) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined) => HTMLElement[]);
    findByTestId: (<T_94 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_94>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement>);
    findAllByTestId: (<T_95 extends HTMLElement = HTMLElement>(id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<T_95[]>) & ((id: _testing_library_dom.Matcher, options?: _testing_library_dom.MatcherOptions | undefined, waitForElementOptions?: _testing_library_dom.waitForOptions | undefined) => Promise<HTMLElement[]>);
};

declare function deepQuerySelector<T extends HTMLElement>(container: Container, selector: string, options?: ShadowOptions): T | null;
/**
 * `deepQuerySelector` behaves like a normal querySelector except it will recurse into the container ShadowRoot
 * and shadowRoot of children. It will not return shadow roots.
 *
 * @example
 *   // <my-element>
 *   //   #shadowRoot <slot name="blah"></slot>
 *   //   <div></div>
 *   // </my-element>
 *   deepQuerySelectorAll(myElement, "*") // => [slot, div]
 *   deepQuerySelectorAll(myElement, "slot[name='blah']") // => [slot]
 */
declare function deepQuerySelectorAll<T extends HTMLElement>(container: Container, selector: string, options?: ShadowOptions): T[];
declare function getAllElementsAndShadowRoots(container: Container, options?: ShadowOptions): (Element | Document | ShadowRoot)[];

export { AsyncScreenShadowMatcherParams, AsyncScreenShadowRoleMatcherParams, AsyncScreenShadowSelectorMatcherParams, AsyncShadowMatcherParams, AsyncShadowRoleMatcherParams, AsyncShadowSelectorMatcherParams, Container, ScreenShadowMatcherParams, ScreenShadowRoleMatcherParams, ScreenShadowSelectorMatcherParams, ShadowByRoleOptions, ShadowMatcherOptions, ShadowMatcherParams, ShadowOptions, ShadowRoleMatcherParams, ShadowSelectorMatcherOptions, ShadowSelectorMatcherParams, createDOMElementFilter, debug, deepQuerySelector, deepQuerySelectorAll, findAllByShadowAltText, findAllByShadowDisplayValue, findAllByShadowLabelText, findAllByShadowPlaceholderText, findAllByShadowRole, findAllByShadowTestId, findAllByShadowText, findAllByShadowTitle, findByShadowAltText, findByShadowDisplayValue, findByShadowLabelText, findByShadowPlaceholderText, findByShadowRole, findByShadowTestId, findByShadowText, findByShadowTitle, getAllByShadowAltText, getAllByShadowDisplayValue, getAllByShadowLabelText, getAllByShadowPlaceholderText, getAllByShadowRole, getAllByShadowTestId, getAllByShadowText, getAllByShadowTitle, getAllElementsAndShadowRoots, getByShadowAltText, getByShadowDisplayValue, getByShadowLabelText, getByShadowPlaceholderText, getByShadowRole, getByShadowTestId, getByShadowText, getByShadowTitle, logShadowDOM, prettyShadowDOM, queryAllByShadowAltText, queryAllByShadowDisplayValue, queryAllByShadowLabelText, queryAllByShadowPlaceholderText, queryAllByShadowRole, queryAllByShadowTestId, queryAllByShadowText, queryAllByShadowTitle, queryByShadowAltText, queryByShadowDisplayValue, queryByShadowLabelText, queryByShadowPlaceholderText, queryByShadowRole, queryByShadowTestId, queryByShadowText, queryByShadowTitle, shadowScreen as screen, shadowQueries, shadowWithin as within };
