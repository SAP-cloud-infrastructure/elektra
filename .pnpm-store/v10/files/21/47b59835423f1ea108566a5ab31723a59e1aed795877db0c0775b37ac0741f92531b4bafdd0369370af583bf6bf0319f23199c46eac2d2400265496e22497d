import { default as React } from 'react';
import { NavigationItemProps } from './index';
type StoryDefinition = () => React.ReactNode;
declare const _default: {
    title: string;
    component: React.FC<NavigationItemProps>;
    argTypes: {};
    decorators: ((story: StoryDefinition) => React.JSX.Element)[];
};
export default _default;
export declare const DefaultWithChildren: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        children: string;
    };
};
export declare const WithValueAndLabel: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        value: string;
        label: string;
    };
};
export declare const ActiveItem: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        active: boolean;
        children: string;
    };
};
export declare const DisabledItem: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        disabled: boolean;
        children: string;
    };
};
export declare const ItemAsLink: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        href: string;
        children: string;
    };
};
export declare const DisabledLinkItem: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        href: string;
        children: string;
        disabled: boolean;
    };
};
export declare const WithIcon: {
    render: ({ children, ...args }: NavigationItemProps) => React.JSX.Element;
    args: {
        label: string;
        icon: string;
    };
};
//# sourceMappingURL=NavigationItem.stories.d.ts.map