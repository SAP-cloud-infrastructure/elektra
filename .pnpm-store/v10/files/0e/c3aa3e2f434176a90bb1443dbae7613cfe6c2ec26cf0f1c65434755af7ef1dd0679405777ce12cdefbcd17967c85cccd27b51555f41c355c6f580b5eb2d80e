import { default as React } from 'react';
/**  A basic CodeBlock component. Accepts a content prop or children. Will render a pre-wrapped code element. */
export declare const CodeBlock: React.FC<CodeBlockProps>;
type CodeBlockSize = "auto" | "small" | "medium" | "large";
export interface CodeBlockProps extends Omit<React.HTMLAttributes<HTMLDivElement>, "content" | "children"> {
    /** The content to render. Used when `lang` is "json". Otherwise, if children are not provided. */
    content?: string | object;
    /** The children to render. Used when `lang` is NOT "json", overriding `content`. */
    children?: React.ReactNode;
    /** Pass at title to render. Will look like a single tab. */
    heading?: string;
    /** Set whether the code should wrap or not. Default is true. */
    wrap?: boolean;
    /** Set the size of the CodeBlock. Default is "auto" */
    size?: CodeBlockSize;
    /** Render a button to copy the code to the clipboard. Defaults to true */
    copy?: boolean;
    /** Pass a lang prop. Passing "json" will render a fully-featured JsonView. Will also add a data-lang attribute to the codeblock */
    lang?: string;
    /** Add a custom className to the wrapper of the CodeBlock */
    className?: string;
}
export {};
//# sourceMappingURL=CodeBlock.component.d.ts.map