import { default as React } from 'react';
declare const _default: {
    title: string;
    component: React.FC<import('./CheckboxGroup.component').CheckboxGroupProps>;
    argTypes: {
        items: {
            table: {
                disable: boolean;
            };
        };
        errortext: {
            control: boolean;
        };
        helptext: {
            control: boolean;
        };
        successtext: {
            control: boolean;
        };
        children: {
            control: boolean;
        };
        selected: {
            control: boolean;
        };
        onChange: {
            table: {
                type: {
                    summary: string;
                };
            };
        };
    };
};
export default _default;
interface TemplateProps {
    children: React.ReactNode;
}
export declare const Default: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        children: React.JSX.Element[];
    };
};
export declare const Selected: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        selected: string[];
        children: React.JSX.Element[];
    };
};
export declare const IndividuallyChecked: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        children: React.JSX.Element[];
    };
};
export declare const WithLabel: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        children: React.JSX.Element[];
    };
};
export declare const Required: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        required: boolean;
        children: React.JSX.Element[];
    };
};
export declare const Disabled: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        label: string;
        disabled: boolean;
        children: React.JSX.Element[];
    };
};
export declare const ValidCheckboxGroup: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        valid: boolean;
        children: React.JSX.Element[];
    };
};
export declare const WithHelptext: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        helptext: string;
        children: React.JSX.Element[];
    };
};
export declare const WithHelptextAsNode: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        helptext: React.JSX.Element;
        children: React.JSX.Element[];
    };
};
export declare const WithSuccesstext: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        successtext: string;
        children: React.JSX.Element[];
    };
};
export declare const InvalidCheckboxGroup: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        invalid: boolean;
        children: React.JSX.Element[];
    };
};
export declare const WithErrortext: {
    render: ({ children, ...args }: TemplateProps) => React.JSX.Element;
    args: {
        name: string;
        label: string;
        errortext: string;
        children: React.JSX.Element[];
    };
};
//# sourceMappingURL=CheckboxGroup.stories.d.ts.map