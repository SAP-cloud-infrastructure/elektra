import { default as React } from 'react';
import { KnownIcons } from '../Icon/Icon.component.js';
/**
A SideNavigation item. To be used inside SideNavigation.
*/
export declare const SideNavigationItem: React.FC<SideNavigationItemProps>;
export interface SideNavigationItemProps extends React.HTMLAttributes<HTMLElement> {
    /** Whether the item is the currently active item */
    active?: boolean;
    /** The aria label of the item */
    ariaLabel?: string;
    /** The children to render. In order to make the navigation work, you also need to pass a `value` or `label` prop, or both. */
    children?: React.ReactNode;
    /** Whether the item is disabled */
    disabled?: boolean;
    /** pass an icon name */
    icon?: KnownIcons;
    /** The label of the item */
    label?: string;
    /** Pass a custom className */
    className?: string;
    /** The link the item should point to. Will render the item as an anchor if passed */
    href?: string;
    /** A handler to execute once the item is clicked. Will render the item as a button element if passed */
    onClick?: React.MouseEventHandler<HTMLElement>;
    /** An optional technical identifier fort the tab. If not passed, the label will be used to identify the tab. NOTE: If value is passed, the value of the active tab MUST be used when setting the activeItem prop on the parent SideNavigation.*/
    value?: string;
}
//# sourceMappingURL=SideNavigationItem.component.d.ts.map