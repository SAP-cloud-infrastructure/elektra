import { default as React } from 'react';
import { KnownIcons } from '../Icon/Icon.component';
/**
A Footer component for Modal.
Renders a simple "Close" Button (and accepts a corresponding onCancel-handler) by default.
Can be passed a confirmButtonLabel and cancelButton label with corresponding onConfirm- and onCancel-handlers.
Can alternatively render all custom children as passed.
*/
export declare const ModalFooter: React.FC<ModalFooterProps>;
export interface ModalFooterProps extends React.HTMLProps<HTMLDivElement> {
    /** Custom children to render. */
    children?: React.ReactNode;
    /** The label for the Confirm-button. When passed, the component will render a Confirm button and a cancel button, otherwise the component will ONLY render a Close-Button. */
    confirmButtonLabel?: string;
    /** Custom label for the cancel button. ONLY has an effect if a `confirmButtonLabel` is passed. */
    cancelButtonLabel?: string;
    /** Pass an Icon name to show on the confirming action button */
    confirmButtonIcon?: KnownIcons;
    /** Pass an icon name to show on the cancelling button */
    cancelButtonIcon?: KnownIcons;
    /** A custom className. Useful to configure flex items alignment when passing custom content as children. */
    className?: string;
    /** Handler to execute once the confirming button is clicked */
    onConfirm?: React.MouseEventHandler<HTMLElement>;
    /** Handler to execute once the cancelling button is clicked */
    onCancel?: React.MouseEventHandler<HTMLElement>;
}
//# sourceMappingURL=ModalFooter.component.d.ts.map