import { default as React } from 'react';
declare const _default: {
    title: string;
    component: React.FC<import('./SecretText.component').SecretTextProps>;
    argTypes: {
        onBlur: {
            control: boolean;
        };
        onChange: {
            control: boolean;
        };
        onClear: {
            control: boolean;
        };
        onCopy: {
            control: boolean;
        };
        onFocus: {
            control: boolean;
        };
        onHide: {
            control: boolean;
        };
        onPaste: {
            control: boolean;
        };
        onReveal: {
            control: boolean;
        };
        onToggle: {
            control: boolean;
        };
    };
};
export default _default;
export declare const Default: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {};
};
export declare const withValue: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        value: string;
    };
};
export declare const revealWithValue: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        reveal: boolean;
        value: string;
    };
    parameters: {
        docs: {
            description: {
                story: string;
            };
        };
    };
};
export declare const WithLabel: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        label: string;
    };
};
export declare const WithValueWithLabel: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        label: string;
        value: string;
    };
};
export declare const RequiredWithLabel: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        required: boolean;
        label: string;
    };
};
export declare const NoClearNoToggleNoPaste: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        value: string;
        clear: boolean;
        toggle: boolean;
        paste: boolean;
    };
};
export declare const Disabled: {
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        disabled: boolean;
    };
};
export declare const ReadOnly: {
    parameters: {
        docs: {
            description: {
                story: string;
            };
        };
    };
    render: ({ ...args }: {
        [x: string]: any;
    }) => React.JSX.Element;
    args: {
        readOnly: boolean;
        disablePaste: boolean;
        label: string;
        value: string;
        helptext: string;
    };
};
//# sourceMappingURL=SecretText.stories.d.ts.map