import { default as React, ReactNode } from 'react';
export declare const Checkbox: React.FC<CheckboxProps>;
export interface CheckboxProps extends React.HTMLAttributes<HTMLDivElement> {
    /** Whether the Checkbox is checked */
    checked?: boolean;
    /** Pass a custom className */
    className?: string;
    /** Whether the Checkbox is disabled */
    disabled?: boolean;
    /** A text to render when the Checkbox has an error or could not be validated */
    errortext?: ReactNode;
    /** A helptext to render to explain meaning and significance of the Checkbox */
    helptext?: ReactNode;
    /** The id of the Radio. An id will be automatically generated if not passed. */
    id?: string;
    /** Whether the Checkbox is indeterminate. Applicable ONLY if the Checkbox represents multiple child Checkboxes with non--identical checked state. */
    indeterminate?: boolean;
    /** Whether the Checkbox was validated unsuccessfully */
    invalid?: boolean;
    /** The label of the Checkbox */
    label?: string;
    /** The name of the Checkbox */
    name?: string;
    /** handler to be executed when the Checkbox changes. */
    onChange?: React.ChangeEventHandler<HTMLInputElement>;
    /** handler to be executed when the Checkbox is clicked. */
    onClick?: React.MouseEventHandler<HTMLInputElement>;
    /** Whether the Checkbox is required */
    required?: boolean;
    /** A text to render when the Checkbox was successfully validated */
    successtext?: ReactNode;
    /** Whether the Checkbox was successfully validated */
    valid?: boolean;
    /** The value of the Checkbox */
    value?: string;
}
//# sourceMappingURL=Checkbox.component.d.ts.map