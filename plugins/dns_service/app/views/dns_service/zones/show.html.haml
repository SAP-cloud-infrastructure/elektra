= content_for :main_toolbar do
  = link_to 'Zones', plugin('dns_service').zones_path
  = "/ #{@zone.name}"

.row
  .col-md-12
    %h4 Nameservers
    %ul
      - @nameservers.each do |recordset|
        - records = recordset.records
        - records = [records] unless records.is_a?(Array)
        - records.each do |record|
          %li= record
.row
  .col-md-9
    = render partial: 'dns_service/zones/recordsets/list', locals: { zone: @zone, recordsets: @recordsets }

  .col-md-3
    .infobox
      %h4.action-heading
        Zone Info
        - can_delete = current_user.is_allowed?("dns_service:zone_delete")
        - can_edit = current_user.is_allowed?("dns_service:zone_update")
        - if can_delete or can_edit
          .dropdown.header-action
            %i.fa.fa-cog.dropdown-toggle{ data: { toggle: "dropdown"}, aria: { expanded: true} }
            %ul.dropdown-menu.dropdown-menu-right{ role:"menu"}
              - if can_edit
                / %li.divider{role: "separator"}
                %li
                  = link_to plugin('dns_service').edit_zone_path(id:@zone.id), data: {modal: true} do
                    %i.fa.fa-edit.fa-fw
                    Edit Zone
                    / %i.fa.fa-exclamation-triangle
              - if can_delete
                / %li.divider{role: "separator"}
                %li
                  = link_to plugin('dns_service').zone_path(id:@zone.id), method: :delete, data: {confirm:'This cannot be undone, are you sure?', ok: 'Yes, delete it!', confirm_term: @zone.name, confirm_term_label: "Type zone name to confirm (#{@zone.name})" } do
                    %i.fa.fa-trash.fa-fw
                    Delete Zone
                    / %i.fa.fa-exclamation-triangle

      %table.table
        %tbody
          %tr
            %td.big-data-cell
              .small
                %b ID
              = @zone.id

          - @zone.attributes.select{|name,value| ['id','name','description', 'serial', 'email', 'ttl','created_at', 'updated_at','status', 'action', 'pool_id'].include?(name)}.each do |name,value|
            - next if value.blank?
            %tr
              %td.big-data-cell
                .small
                  %b= name.humanize
                - if name=='created_at' or name=='updated_at'
                  = DateTime.parse(value).strftime("%b. %d, %Y, %l:%M %P") rescue value
                - elsif name == 'pool_id'
                  = pool_name_and_description(value, @pools)
                - else
                  = value
