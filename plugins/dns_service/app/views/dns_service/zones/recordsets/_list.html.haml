%form
  .toolbar.toolbar-aligntop
    / / seach form
    .inputwrapper
      = select_tag 'searchfor', options_for_select(['Name', 'Type', 'Data', 'TTL', 'Status'], @searchfor), class: "form-control"
    .inputwrapper
      .input-group.has-feedback.has-feedback-searchable
        %input.form-control{:id => "search", :name => 'search', :placeholder => "Enter search term", :type => "text", :size => 40, :value => @search }
        .span.input-group-btn
          %button.btn.btn-default{type: "submit"}
            %i.fa.fa-search
    %a.help-link.has-feedback-help{href: "#", data: {toggle: "popover", "popover-type": "help-hint", content: 'Search term can use wildcard "*".'}}
      %i.fa.fa-question-circle

    - if current_user.is_allowed?("dns_service:recordset_create", zone: zone) && @scoped_project_id == zone.project_id
      .main-buttons
        = link_to 'Create New', plugin('dns_service').new_zone_recordset_path(zone_id: zone.id), data: {modal: true}, class: 'btn btn-primary'

%table.table#recordsets
  %thead
    %tr
      %th Name
      %th Type
      %th Data
      %th TTL
      %th.snug
  %tbody
    - if recordsets.length==0
      %tr{data: {empty: true}}
        %td{colspa: 6} No records available
    - else
      = render partial: 'dns_service/zones/recordsets/recordsets', locals: { recordsets: recordsets, zone: zone }

-# if @pagination_has_next
  .ajax-paginate{ data: { ajax_paginate: true, list_selector: 'table#recordsets tbody', search_input_selector: '#search_records_input'} }

= render_paginatable(recordsets, {searchfor: @searchfor, search: @search})
