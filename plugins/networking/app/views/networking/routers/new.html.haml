= simple_form_for @router, url: plugin('networking').routers_path, method: :post, remote: request.xhr?, html: {data: {modal: true,router_form: true}, class: 'form-horizontal' }, wrapper: :horizontal_form do |f|

  %div{class: modal? ? 'modal-body' : ''}
    - if @router.errors.present?
      %p.alert.alert-error
        = @router.errors.full_messages.to_sentence + '.'

    = f.input :name
    = f.input :admin_state_up, {label: 'Admin State',
      as:                 :select,
      collection:         [['UP', 'true'],['DOWN', 'false']]}


    = f.simple_fields_for :external_gateway_info do |info|
      = info.input :network_id, {label: "Floating IP Network",
        input_html:         {},
        as:                 :select,
        collection:         @external_networks,
        selected:           @router.external_gateway_info.fetch("network_id",nil),
        required:           true}

      %fieldset#subnets
        = info.simple_fields_for :external_fixed_ips do |fixed_ips|
          = fixed_ips.input :subnet_id,
            as: :select,
            input_html: { name: "router[external_gateway_info][external_fixed_ips][][subnet_id]", data: { selected: @router.external_subnet_ids } },
            collection: @subnets

    = f.input :internal_subnets, {label: "Private Network Subnets",
      input_html:         {multiple: true},
      as:                 :select,
      collection:         @internal_subnets.sort{|a,b| a.network_name<=>b.network_name},
      selected:           @selected_internal_subnets,
      label_method:       -> s {"#{s.name} (#{s.network_name})"},
      required:           true}


  %div.buttons{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{type:"button", data: {dismiss:"modal"}, aria: {label: "Cancel"}} Cancel
    - else
      = link_to "Cancel", routers_url, class: 'btn btn-default'
    = button_tag "Create", { class: 'btn btn-primary pull-right', data: { disable_with: "Please wait..." } }
