= content_for :title do
  Container: #{@container.name}

- pl = plugin('object_storage')

= simple_modal_form_for @container, submit_action: 'Update container', url: pl.container_path(URI.encode_www_form_component(@container_name)), method: :put, cancel_url: pl.containers_path do |f|

  .row
    .col-md-6
      = f.input :object_count, readonly: true, input_html: { value: Core::DataType.new(:number).format(@container.object_count) }
      = f.input :total_size, readonly: true, input_html: { value: Core::DataType.new(:bytes).format(@container.bytes_used) }
    .col-md-6
      = f.input :object_count_quota, as: :integer, placeholder: 'Leave empty to disable'

      - initial_value = Core::DataType.new(:bytes).format(@container.bytes_quota) if @container.bytes_quota
      - value = params.fetch(:container, {}).fetch(:bytes_quota, initial_value)
      = f.input :bytes_quota, as: :string, input_html: { value: value }, placeholder: 'Leave empty to disable', label: 'Total size quota'

  - if @container.allows_public_access?
    - label = capture do
      URL for public access
      = link_to '(Open in new tab)', @container.public_url, target: '_blank'
    = f.input :public_url, readonly: true, label: label

  - if has_capability?('staticweb')
    .form-group#container_static_web
      %label Static website serving
      - if @container.public_read_access?
        - enabled = @container.web_index.present?
        .row{ class: enabled ? '' : 'collapsed' }
          .col-md-6
            = render layout: 'checkbox_with_label', locals: { name: 'container[has_web_index]', checked: enabled, options: { class: 'feature-select' } } do
              Serve objects as index
              %span.hide-when-collapsed when file name is:
          .col-md-6.hide-when-collapsed
            = f.input :web_index, as: :string, input_html: { value: @container.web_index || 'index.html' }, label: false
        .row
          .col-md-12
            = render layout: 'checkbox_with_label', locals: { name: 'container[web_file_listing]', checked: @container.web_file_listing?, options: { class: 'feature-select' } } do
              Enable file listing
              = icon 'question-circle',class: 'help_icon', title: 'If there is no index file, the URL displays a list of objects in the container.'
      - else
        .bs-callout.bs-callout-info
          Before configuring static website serving, go to
          = link_to 'Access control', plugin('object_storage').containers_path + "?overlay=" + plugin('object_storage').show_access_control_container_path(@container.name)
          and enable public read access.

  .form-group#container_versions_location
    %label Object versioning
    - enabled = @container.versions_location.present? || @container.has_versions_location.present?
    .row{ class: enabled ? '' : 'collapsed' }
      .col-md-6
        = render layout: 'checkbox_with_label', locals: { name: 'container[has_versions_location]', checked: enabled, options: { class: 'feature-select' } } do
          Store old object versions
          %span.hide-when-collapsed in container:
      .col-md-6.hide-when-collapsed
        = f.input :versions_location, collection: @other_container_names, label: false, prompt: true

  .form-group
    %label Metadata
    = render partial: 'editable_metadata_display', locals: { metadata: @container.metadata }

=content_for :javascripts do
  :javascript

    $('input.feature-select[type=checkbox]').change(function() {
      $(this).closest('.row').toggleClass('collapsed', !$(this).is(':checked'));
    });
