= content_for :title do
  New Healthmonitor

- if modal?
  .flashes_area
    = render 'flashes'

= simple_form_for @healthmonitor, url: plugin('loadbalancing').loadbalancer_pool_healthmonitors_path(loadbalancer_id: @loadbalancer.id, pool_id: @pool.id), method: :post, remote: request.xhr?, html: {id: 'healthmonitor_form', data: {modal: true} } do |f|

  %div{class: modal? ? 'modal-body' : ''}

    = render :partial => 'loadbalancing/application/errors', locals: {object: @healthmonitor}

    .row
      .col-sm-6
        = render partial: 'form', locals: {f: f, update: false}

      .col-sm-6
        .bs-callout.bs-callout-primary.small
          %h3= "Health Monitor"
          %p= "Checks the health of the pool members. Unhealthy members will be taken out of traffic schedule. Set's a load balancer to OFFLINE when all members are unhealthy."
          %h4= "Type"
          %p= "The type of probe sent by the load balancer to verify the member state. A valid value is PING, TCP, HTTP, or HTTPS."
          %h4= "Max retries"
          %p= "Number of failed health checks before marked as OFFLINE."
          %h4= "Timeout"
          %p= "The time, in seconds, after which a health check times out."
          %h4= "Delay"
          %p= "The time, in seconds, between sending probes to members."
          %h4= "HTTP method"
          %p= "The http method used for requests in case monitor is of type HTTP(S)"
          %h4= "Expected codes"
          %p= "The expected HTTP status codes to get from a successful health check, i.e. 200."
          %h4= "Url Path"
          %p= "Path used for the check, i.e. /healthcheck"


  %div.buttons{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{ type: 'button', data: { dismiss:'modal' }, aria: { label: 'Cancel' } } Cancel
    - else
      = link_to 'Cancel', plugin('loadbalancing').loadbalancer_pool_healthmonitors_path(loadbalancer_id: @loadbalancer.id, pool_id: @pool.id), class: 'btn btn-default'
    %button{ type: 'submit', class: 'btn btn-primary', data: { disable_with: 'Please wait...'} } Create
