= content_for :main_toolbar do
  = link_to 'Load Balancers', plugin('loadbalancing').loadbalancers_path()
  = ' / '
  = link_to "Pools" , plugin('loadbalancing').loadbalancer_pools_path(loadbalancer_id: @loadbalancer.id)

%ul.nav.nav-tabs
  %li{role: "presentation"}= link_to 'Listeners', plugin('loadbalancing').send("loadbalancer_listeners_path", loadbalancer_id: @loadbalancer.id)
  %li.active{role: "presentation"}= link_to 'Pools', '#pools', aria: {controls:"pools"}, role: "tab", data: {toggle:"tab"}

.row
  .col-md-9
    .tab-content
      #pools.tab-pane.active{role: "tabpanel"}
      .toolbar.toolbar-aligntop
        .has-feedback.has-feedback-searchable
          = text_field_tag 'search_pools_input', '', class: "form-control", placeholder: 'name/id, desc., protocol'
        .has-feedback-help
          %a.help-link{href: "#", data: {toggle: "popover", "popover-type": "help-hint", content: "Searches by pool name/id, description and protocol. Entering a search term will automatically start loading the next pages and filter the loaded items using the search term. Emptying the search input field will show all currently loaded items."}}
            %i.fa.fa-question-circle

        - if current_user.is_allowed?('loadbalancing:resource_create', {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          .main-buttons
            = link_to 'Create new', plugin('loadbalancing').new_loadbalancer_pool_path(loadbalancer_id: @loadbalancer.id), data: {modal: true}, class: 'btn btn-primary btn-sm'

    %table.table.pools.searchable{data:{search_input: '#search_pools_input'}}
      %thead
        %tr
          %th Name/ID
          %th Description
          %th Protocol
          %th Algorithm
          %th= '#Members'
          %th States
          %th.snug
      %tbody
        -if @pools.blank?
          %tr
            %td{colspan:7} No Pool defined
        -else
          = render partial: 'loadbalancing/loadbalancers/pools/list', locals: {loadbalancer: @loadbalancer, pools: @pools}
    -# if has next items (comes from paginate helper in controller) render the
    -# ajax paginate plugin (identified by data-ajax-paginate)
    - if @pagination_has_next
      .ajax-paginate{ data: { ajax_paginate: true, list_selector: 'table.pools tbody', search_input_selector: '#search_pools_input'} }

  .col-md-3
    = render :partial => 'loadbalancing/loadbalancers/info', locals: {loadbalancer: @loadbalancer}
