- data = {}
- if l7policy.in_transition?
  - data[:update_url]=plugin('loadbalancing').update_item_loadbalancer_listener_l7policy_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, id: l7policy.id)
  - data[:interval]=2500

%tr{id: "loadbalancer_listener_l7policy_#{l7policy.id}", data: data }
  %td
    - if l7policy.in_transition?
      %span{class: 'spinner'}
    = link_to l7policy.name, plugin('loadbalancing').loadbalancer_listener_l7policy_l7rules_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, l7policy_id: l7policy.id)
  %td= l7policy.description
  %td= l7policy.position
  %td= l7policy.action
  - if l7policy.redirect_pool_id
    %td= link_to l7policy.redirect_pool_id, plugin('loadbalancing').loadbalancer_pool_path(id: l7policy.redirect_pool_id, loadbalancer_id: loadbalancer.id), data: {modal: true}
  - else
    %td= l7policy.redirect_url
  - nrules = l7policy.rules ? l7policy.rules.count : 0
  %td= link_to nrules, plugin('loadbalancing').loadbalancer_listener_l7policy_l7rules_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, l7policy_id: l7policy.id) if current_user.is_allowed?("loadbalancing:resource_get", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})

  %td.snug
    .btn-group
      %button.btn.btn-default.btn-sm.dropdown-toggle{ type: "button", data: { toggle: "dropdown"}, aria: { expanded: true} }
        %span.fa.fa-cog

      %ul.dropdown-menu.dropdown-menu-right{ role:"menu"}
        - if current_user.is_allowed?("loadbalancing:resource_get", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li= link_to 'Show', plugin('loadbalancing').loadbalancer_listener_l7policy_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, id: l7policy.id), data: {modal: true}
        - if current_user.is_allowed?("loadbalancing:resource_update", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li= link_to 'Edit', plugin('loadbalancing').edit_loadbalancer_listener_l7policy_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, id: l7policy.id), data: {modal: true}
        - if current_user.is_allowed?("loadbalancing:resource_get", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li.divider
          %li= link_to 'L7 Rules', plugin('loadbalancing').loadbalancer_listener_l7policy_l7rules_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, l7policy_id: l7policy.id)
        - if nrules == 0 and current_user.is_allowed?("loadbalancing:resource_delete", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li.divider
          %li= link_to 'Delete',
            plugin('loadbalancing').loadbalancer_listener_l7policy_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, id: l7policy.id),
            method: :delete,
            data: { confirm: 'Are you sure you want to delete this Listener?',
              ok: "Yes, delete it",
              remote: true,
              confirmed: :loading_status}
