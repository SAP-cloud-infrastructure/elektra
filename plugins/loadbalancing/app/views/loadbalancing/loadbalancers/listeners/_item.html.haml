- data = {search_name: "#{listener.id} #{listener.name} #{listener.description} #{listener.protocol_port} #{listener.protocol}", marker_id: listener.id}
- if listener.in_transition?
  - data[:update_path]=plugin('loadbalancing').update_item_loadbalancer_listener_path(loadbalancer_id:loadbalancer.id, id: listener.id)
  - data[:update_interval]=15

%tr{id: "#{listener.id}", data: data }
  %td
    - if listener.in_transition?
      %span{class: 'spinner'}
    = link_to name_or_id(listener.name, listener.id, 15), plugin('loadbalancing').loadbalancer_listener_l7policies_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id)
  %td
    = description(listener.description,25)
  %td= listener.protocol
  %td= listener.protocol_port
  %td
    - if listener.default_pool_id
      = link_to plugin('loadbalancing').show_details_loadbalancer_pool_path( loadbalancer_id: loadbalancer.id, id: listener.default_pool_id ) do
        %i.fa.fa-check{title: "#{listener.default_pool_id}"}
    - else
      = link_to plugin('loadbalancing').new_loadbalancer_pool_path(loadbalancer_id: loadbalancer.id, listener_id: listener.id, proto: listener.protocol), data: {modal: true} do
        %i.fa.fa-times
  %td
    %label{class: 'spinner', data: {op_status: "#{listener.id}"}}
    %label{class: 'spinner', data: {prov_status: "#{listener.id}"}}

  %td.snug
    .btn-group
      %button.btn.btn-default.btn-sm.dropdown-toggle{ type: "button", data: { toggle: "dropdown"}, aria: { expanded: true} }
        %span.fa.fa-cog

      %ul.dropdown-menu.dropdown-menu-right{ role:"menu"}
        - if current_user.is_allowed?("loadbalancing:resource_get", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li= link_to 'Show', plugin('loadbalancing').loadbalancer_listener_path(loadbalancer_id: loadbalancer.id, id: listener.id), data: {modal: true}
        - if current_user.is_allowed?("loadbalancing:resource_update", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li= link_to 'Edit', plugin('loadbalancing').edit_loadbalancer_listener_path(loadbalancer_id: loadbalancer.id, id: listener.id), data: {modal: true}
        - if current_user.is_allowed?("loadbalancing:resource_update", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li.divider
          - if listener.default_pool_id
            %li= link_to 'Edit Default Pool', plugin('loadbalancing').show_details_loadbalancer_pool_path(id: listener.default_pool_id, loadbalancer_id: loadbalancer.id)
            %li= link_to 'Delete Default Pool', plugin('loadbalancing').loadbalancer_pool_path(id: listener.default_pool_id, loadbalancer_id: loadbalancer.id),
              method: :delete,
              data: { confirm: 'Are you sure you want to delete this pool?',
                ok: "Yes, delete it",
                confirmed: :loading_status}
          - else
            %li= link_to 'New Default Pool', plugin('loadbalancing').new_loadbalancer_pool_path(listener_id: listener.id, loadbalancer_id: loadbalancer.id, proto: listener.protocol), data: {modal: true}
        - if current_user.is_allowed?("loadbalancing:resource_delete", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
          %li.divider
          %li= link_to 'Delete',
            plugin('loadbalancing').loadbalancer_listener_path(loadbalancer_id: loadbalancer.id, id: listener.id),
            method: :delete,
            data: { confirm: 'Are you sure you want to delete this Listener?',
              ok: "Yes, delete it",
              remote: true,
              confirmed: :loading_status}
