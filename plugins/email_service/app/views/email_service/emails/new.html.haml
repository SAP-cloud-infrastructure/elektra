= simple_form_for :email, url: plugin('email_service').emails_path(), method: :post, remote: request.xhr?, html: {id: 'form_plain_email', data: {modal: true}, class: 'form-horizontal' }, wrapper: :horizontal_form do |f|
  - if !@e_collection || @e_collection.empty? 
    %p.alert.alert-warning
      There is no verified eMail addresses defined for your account to send email from. Without a verified eMail address, you can't send eMails.
      You can get verified your eMail address
      = link_to 'here', plugin('email_service').new_verification_path()
  
  .modal-body
    .row
      .col-sm-6
        = f.input :source, { label: "Sender", 
          collection: @e_collection, as: :select,
          placeholder: "Enter your source email address",
          hint: "Enter email address you wish to send this email from ",
          required: true}
        = f.input :to_addr, required: true, 
          label: 'To Address(es)', 
          placeholder: 'Enter To Addresses', 
          input_html: {value: "sirajudheen.mohamed.ali@sap.com"},
          hint: 'You can enter up to 50 recipient email addresses (To, Cc, Bcc) together'
        %span.toEmailHelpBlock
        %span.toErrBlock
        = f.input :cc_addr, 
          required: false, 
          label: 'Cc Address(es)', 
          placeholder: 'Enter Cc Addresses',
          input_html: { value: "sirajudheen.mohamed.ali@sap.com" },
          hint: 'You can enter up to 50 recipient email addresses (To, Cc, Bcc) together'
        %span.ccEmailHelpBlock 
        %span.ccErrBlock
        = f.input :bcc_addr, 
          required: false, 
          label: 'Bcc Address(es)', 
          placeholder: 'Enter Bcc Addresses',
          input_html: { value: "sirajudheen.mohamed.ali@sap.com" },
          hint: 'You can enter up to 50 recipient email addresses (To, Cc, Bcc) together'
        %span.bccEmailHelpBlock
        %span.bccErrBlock
        = f.input :subject, 
          input_html: { value: "Cronus eMail Service - from Elektra UI Plugin - #{Time.new}" },
          required: true, 
          label: 'Subject', 
          placeholder: 'Enter Subject',
          hint: 'Enter subject line'
        = f.input :htmlbody,
          label:              "HTML Body",
          placeholder:        "Enter HTML Email Body",
          input_html:         {rows: "15", class: "u-text-monospace", 
          value: "<h1>Email Sent by Cronus </h1><p><h2>AWS SES Proxy Service</h2>"},
          as:                 :text,
          required:           true,
          hint: 'Enter HTML Text of your email'
        = f.input :textbody,        
          label:              "Text Body",
          placeholder: "Enter Text Email Body",
          input_html:         {rows: "15", class: "u-text-monospace", value: "Email Sent by Cronus - AWS SES Proxy Service"},
          as:                 :text,
          required:           true,
          hint: 'Enter Plain Text of your email'

  %div{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{type:"button", data: {dismiss:"modal"}, aria: {label: "Cancel"}} Cancel
    - else
      = link_to "Cancel", plugin('email_service').emails_path(), class: 'btn btn-default'
    = button_tag "Send", { class: 'btn btn-primary pull-right', data: { disable_with: "Please wait..." } }