-# search_name and marker_id are important for searchable and ajax_paginate plugins!
- real_status = instance.task_state.nil? ? instance.status : instance.task_state # instance.status isn't always what we need. E.g. when an instance is spawned, the task_state contains the state we are interested in
- data = {search_name: instance.name+'_'+instance.id+'_'+real_status, marker_id: instance.id}
- if instance.task_state
  - data[:update_url]=plugin('compute').update_item_instance_path(id:instance.id, target_state: local_assigns[:target_state])
  - data[:interval]=10000

- state_icon = 'state-locked-icon' if instance.locked?
- state_icon = "state-#{instance.status.downcase}-icon" if state_icon.nil? && instance.status
- state_text = "Status: #{instance.task_state.nil? ? instance.status.humanize : instance.task_state.humanize}"
- state_text += " (for more information see server details)" if instance.status == "ERROR"

- unless instance.errors.blank?
  - state_icon = "state-error-icon"
  - state_text = instance.errors.full_messages.to_sentence

- if instance.locked?
  - state_text = 'This instance is locked. Please note that |
    this status is only displayed correctly if you use the lock/unlock functions |
    via Elektra exclusively!' |

%tr{data: data, id: "instance_#{instance.id}"}
  %td
    - if state_icon
      %span{ class: state_icon,
        data: { toggle: 'tooltip', placement: 'top'},
        title: state_text}
  %td
    %span{title: instance.name || ''}
      - name = (instance.name || '').truncate(30)
      - if current_user.is_allowed?("compute:instance_get", {})
        = link_to name, plugin('compute').instance_path(id: instance.id), data: {modal: true}
      - else
        = name
    %br
    = instance.availability_zone
    - hypervisor = instance.attributes['OS-EXT-SRV-ATTR:host'] || ''
    - if hypervisor.to_s.include?('nova-compute-ironic')
      %span.badge
        %smal bare metal

  - if @all_projects
    %td
      - project_id_and_name(instance.tenant_id)
  -# %td= instance.availability_zone
  %td.snug-nowrap
    .instance-ips{ data: { collapsable: true, collapsed: true } }
      - network_ips = network_ips_map(instance_ips(instance))
      - network_ips.each do |network_name, ips|
        .list-group.borderless
          = network_name
          = render_fixed_floating_ips(ips)
  %td
    = instance.metadata.image_name || instance.image_object.try(:name) || '-'
    %br
    = instance.flavor['original_name'] || '-'

  %td= instance.power_state_string
  %td
    - if instance.task_state
      %span.spinner
    = instance.task_state.nil? ? instance.status.humanize : instance.task_state.humanize

  %td= instance.pretty_created_at
  %td.snug
    - if current_user.is_allowed?("compute:instance_delete", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}}) or current_user.is_allowed?("compute:instance_update", {}) or current_user.is_allowed?("compute:instance_edit_securitygroups", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
      = render partial: 'item_actions', locals: {instance: instance, show_view: false}