= content_for :title do
  Attach Interface

= simple_form_for @os_interface, url: plugin('compute').create_interface_instance_path(id:params[:id]), method: :put, remote: request.xhr?, html: {data: {modal: true}, class: 'form-horizontal', id: 'fixed_ip' }, wrapper: :horizontal_form do |f|

  %div{class: modal? ? 'modal-body' : ''}
    - if @os_interface.errors.present?
      .alert.alert-error
        = render_errors(@os_interface.errors)

    = f.input :net_id, {label: "Network",
      input_html:         {},
      as:                 :select,
      collection:         @networks,
      required:           true}

    -# = f.simple_fields_for :fixed_ips do |fixed_ips|
    -#   = fixed_ips.input :ip_address, { label: "Fixed IP",
    -#     required: false,
    -#     input_html: { name: 'os_interface[fixed_ips][][ip_address]', value: @os_interface.fixed_ips.try(:first).try(:fetch, 'ip_address') },
    -#     icon_hint: 'You can request a specific fixed IP address. Leave blank if you are unsure.'}


    = f.input :subnet_id, { label: "Subnet",
      as:                 :select,
      collection:         @subnets,
      label_method:       -> (subnet) { "#{subnet.name} (#{subnet.cidr})" },
      include_blank:      "Choose subnet",
      icon_hint:          'You can specify a subnet from which the fixed IP is chosen. If empty any subnet is selected'}

    = f.input :port_id, as: :hidden
    = f.input :fixed_ip, { label: 'Server fixed IP',
      input_html: {name: 'os_interface[fixed_ips][][ip_address]', value: @os_interface.fixed_ips.try(:first).try(:fetch, 'ip_address')},
      icon_hint: 'Choose a previously reserved IP or type a new one. Leave empty to let the DHCP select one for you.'}


  %div.buttons{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{type:"button", data: {dismiss:"modal"}, aria: {label: "Cancel"}} Cancel
    - else
      = link_to "Cancel", instances_url(), class: 'btn btn-default'
    = button_tag "Attach", { class: 'btn btn-primary pull-right', data: { disable_with: "Please wait..." } }

:javascript
  $(document).ready(function(){
    $('#os_interface_fixed_ip').fixedIpSelector({
      subnetSelector: '#os_interface_subnet_id',
      networkSelector: '#os_interface_net_id',
      portSelector: '#os_interface_port_id',
      subnets: #{@subnets.to_json.html_safe},
      ports: #{@fixed_ip_ports.to_json.html_safe}
    })
  });
