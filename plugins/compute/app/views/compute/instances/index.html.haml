= render "intro"


%form
  .toolbar.toolbar-controlcenter
    / / seach form
    .inputwrapper
      = select_tag 'searchfor', options_for_select(['Name', 'ID', 'IP', 'Status'], @searchfor), class: "form-control"

    .inputwrapper
      .input-group.has-feedback.has-feedback-searchable
        %input.form-control{:id => "search", :name => 'search', :placeholder => "Name, ID, IP or Status", :type => "text", :size => 40, :value => @search }
        .span.input-group-btn
          %button.btn.btn-default{type: "submit"}
            %i.fa.fa-search
    %a.help-link.has-feedback-help{href: "#", data: {toggle: "popover", "popover-type": "help-hint", content: 'Search by name and fixed IP will find exact or partial matches. ID and status have to be exact matches to be found.'}}
      %i.fa.fa-question-circle

    - if current_user.is_allowed?("compute:instance_create", {target: { project: @active_project, scoped_domain_name: @scoped_domain_name}})
      .main-buttons
        = link_to 'Create New', plugin('compute').new_instance_path, data: {modal: true}, class: 'btn btn-primary'

-# add searchable plugin to instances table (identified by css class searchable)
%table.table.instances
  %thead
    %tr
      %th.snug
      %th
        Name / AZ
        %i.fa.fa-fw.fa-info-circle{data: { toggle: "tooltip", placement: "top", title: "Availability Zone"}}
      - if @all_projects
        %th Owning Project
      -# %th
      -#   AZ
      -#   %i.fa.fa-fw.fa-info-circle{data: { toggle: "tooltip", placement: "top", title: "Availability Zone"}}
      %th IPs
      %th
        OS / Size
      -# %th Size
      %th Power state
      %th Status
      %th Created at
      %th.snug
  %tbody
    - if @instances.empty?
      %tr{data: {empty: true}}
        %td{colspan: 8} No instances available
    - else
      = render partial: 'list', locals: {instances: @instances}

-# if has next items (comes from paginate helper in controller) render the
-# ajax paginate plugin (identified by data-ajax-paginate)
-# if @pagination_has_next
  .ajax-paginate{ data: { ajax_paginate: false, list_selector: 'table.instances tbody', search_input_selector: '#search_instances_input'} }


= render_paginatable(@instances, {searchfor: @searchfor, search: @search})