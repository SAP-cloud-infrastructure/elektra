%noscript
  %h1 SAP Converged Cloud
  = link_to "Enter the cloud", main_app.domain_home_path(domain_id: params[:domain_id], project_id:nil)
  = link_to "Log in with password", monsoon_openstack_auth.login_path(domain_fid: @scoped_domain_fid || params[:domain_id], domain_name: (params[:domain_id] || Rails.configuration.default_domain), after_login: main_app.domain_home_path(domain_id:params[:domain_id]))
-# global landing page with preselected region/domain
= # javascript_include_tag "https://assets.juno.global.cloud.sap/apps/widget-loader@latest/build/app.js", defer: true, data: {"show-loading": "true", name: "dashboard", version: "latest", "props-region": "#{current_region}", "props-domain": "#{current_domain}", "props-prodmode": Rails.env.production?}
= javascript_include_tag "https://assets.juno.global.cloud.sap/apps/widget-loader@latest/build/app.js", defer: true, data: {"importmap-only": "true"}

#dashboard
  Loading...
  %script{type: "module-shim"}
    :plain
      // try to load juno app "dashboard" via dynamic import
      // In case of an error or after a timeout, the domain home page will be loaded
      const timeout = 5 // seconds
      const url = new URL(window.location.href)
      const domain = (url.pathname || "").split("/",2)[1]
      const homeUrl = new URL(`${domain}/home`,url)

      let timer = setTimeout(()=>window.location.href=homeUrl,timeout*1000)
      window.addEventListener("JUNO_IMPORTMAP_LOADED",()=>{
        import("@juno/dashboard@latest").then((app) => {
          app.mount(document.getElementById("dashboard"),{props: {region: "#{current_region}", domain: "#{current_domain}", prodmode: "#{Rails.env.production?}"}})
        }).catch((error) => {
          window.location.href=homeUrl
        }).finally(() => clearTimeout(timer))
      })
