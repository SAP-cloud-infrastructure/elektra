.context-breadcrumb.context-breadcrumb-fancy
  .container.context-container
    - if @can_access_domain
      %ol.context-list
        %li.dropdown
          = link_to main_app.domain_home_path(domain_id: @scoped_domain_fid, project_id:nil) do
            %i.icon-link.fa.fa-home

      - unless @domain_switch
        %ol.context-list
          %li.dropdown{data: {react_auth_projects_link: 'true', icon_class: 'icon-link fa fa-th-list'}}

    - if @can_access_project && !@domain_switch
      %ol.context-list
        %li= link_to @scoped_project_name.try(:html_safe), main_app.project_home_path(domain_id: @scoped_domain_fid, project_id: @scoped_project_fid)

      %ol.context-list
        %li.dropdown.dropdown-mega
          %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
            %i{class: selected_category_icon}
            = selected_service_name
            %span.caret
          = render_navigation(expand_all: true, renderer: :fancy_list, context: navigation_context(@scoped_domain_name, @scoped_project_name))

    .special-crumb
      - if services.available?(:webconsole) && current_user.is_allowed?('webconsole:application_get') && plugin_name!='webconsole'
        = link_to 'javascript:void(0)', class: 'solo-icon-link', data: {trigger: 'webconsole:open'} do
          %span.fa-stack
            %i.fa.fa-square.fa-stack-2x
            %i.fa.fa-terminal.fa-stack-1x.fa-inverse

      - if current_user && current_user.is_allowed?('tools:application_get')
        .has-feedback.has-feedback-searchable.universal-search-input
          = text_field_tag('universal_search_field', '', { type: "text",
            class: "form-control",
            placeholder: "Find by ID, name, or description",
            data: {universal_search_field: true, url: plugin('cc_tools').start_path}})
          %span.form-control-feedback.false
            %i.fa.fa-search
